#!/usr/bin/env ruby

## include our needed libraries ##

['rubygems', 'sequel', 'thread', 'etc', 'getoptlong', 'logger'].each do |file|
    begin
        require file
    rescue Object => boom
        puts "ERROR: Failed to load required library: #{file}"
        exit 1
    end
end

## optional libraries ##
begin
    require 'fastthread'
rescue Object => boom
    # ignore if not found #
end

require 'mod_spox/Version'

# lets get sequel setup like we want it #
require 'sequel/extensions/migration'
Sequel::Model.plugin :validation_helpers
Sequel::Model.plugin :schema
Sequel::Model.unrestrict_primary_key
# okay, lets go #

begin
    require 'mod_spox/Loader'
rescue
    puts 'ERROR: Failed to load mod_spox'
    exit 1
end
include ModSpox

opts = GetoptLong.new(
    ['--config', '-c', GetoptLong::NO_ARGUMENT],
    ['--debug', '-d', GetoptLong::OPTIONAL_ARGUMENT],
    ['--verbosity', '-V', GetoptLong::OPTIONAL_ARGUMENT],
    ['--version', '-v', GetoptLong::NO_ARGUMENT],
    ['--jdbc', '-j', GetoptLong::NO_ARGUMENT],
    ['--help', '-h', GetoptLong::NO_ARGUMENT],
    ['--path', '-p', GetoptLong::REQUIRED_ARGUMENT],
    ['--daemon', '-D', GetoptLong::NO_ARGUMENT]
)
verbose = 0
opts.each do |opt, arg|
    case opt
        when '--help'
            puts 'Usage: mod_spox [opts]'
            puts '--config -c:                        starts configuration wizard'
            puts '--path -p /config/path              path to configuration directory'
            puts '--jdbc -j                           use jdbc database driver (jruby)'
            puts '--debug -d [logfile]:               turns on debugging and outputs to file (default STDOUT)'
            puts '--verbosity -V [(info|warn|fatal)]: verbosity of debug output (default fatal)'
            puts '--deamon -D:                        daemonizes the process'
            puts '--version -v:                       output bot version information'
            puts '--help -h:                          print this help message'
            exit
        when '--version'
            puts "mod_spox IRC bot version: #{$BOTVERSION}"
            puts 'http://rubyforge.org/projects/modspox'
            exit
        when '--jdbc'
            ModSpox.jdbc = true
            begin
                require 'jdbc/postgres'
            rescue Object => boom
                puts 'Failed to load JDBC Postgres gem'
                exit 1
            end
        when '--debug'
            if(arg && arg.gsub(' ', '').size > 0)
                ModSpox.logto = arg
            else
                ModSpox.logto = $stdout
            end
        when '--config'
            require 'mod_spox/ConfigurationWizard'
            wizard = ConfigurationWizard.new
            BotConfig.configured? ? wizard.update : wizard.run
            exit
        when '--path'
            ModSpox.mod_spox_path = arg
        when '--daemon'
            ModSpox.daemon_bot = true
        when '--verbosity'
            if(arg && arg =~ /^(info|warn|error|fatal)$/)
                ModSpox.loglevel = arg.to_sym
            end
    end
end

ModSpox.initialize_bot
require 'mod_spox/Bot'
Process.daemon if ModSpox.daemon_bot
bot = Bot.new
bot.run
